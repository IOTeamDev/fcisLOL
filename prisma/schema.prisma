generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL_NO_SSL")
}

model User {
  id        Int     @id @default(autoincrement())
  firstName String
  lastName  String
  email     String  @unique
  password  String
  role      Role    @default(USER)
  videos    Video[]
  subjects  Subject[]
  files     File[]
  links    Link[]
}

enum Role {
  USER
  ADMIN
  SUPERADMIN
}


model Semester {
  id       Int       @id @default(autoincrement())
  name     String
  levelId  Int
  subjects Subject[]
}

model Subject {
  id         Int      @id @default(autoincrement())
  name       String
  semesterId Int
  semester   Semester @relation(fields: [semesterId], references: [id])
  admins     User[]
  videos     Video[]
  files      File[]
  links      Link[]
}

model Video {
  id          Int     @id @default(autoincrement())
  title       String
  url         String
  thumbnail   String?
  description String?
  subjectId   Int
  subject     Subject @relation(fields: [subjectId], references: [id])
  userId      Int
  publisher   User    @relation(fields: [userId], references: [id])
  status      Status
  updatedAt   DateTime? @updatedAt
}

model File {
  id        Int      @id @default(autoincrement())
  title     String
  description String?
  url       String
  subjectId Int
  subject   Subject @relation(fields: [subjectId], references: [id])
  userId    Int
  publisher User    @relation(fields: [userId], references: [id])
  status    Status
  updatedAt DateTime? @updatedAt
}
model Link {
  id        Int      @id @default(autoincrement())
  title     String
  description String?
  url       String
  subjectId Int
  subject   Subject @relation(fields: [subjectId], references: [id])
  userId    Int
  publisher User    @relation(fields: [userId], references: [id])
  status    Status
  updatedAt DateTime? @updatedAt
}

enum Status {
  PENDING
  APPROVED
  REJECTED
}
